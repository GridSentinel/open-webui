export type CIMClass =
    | 'ACLineSegment'
    | 'Breaker'
    | 'ConnectivityNode'
    | 'EnergyConsumer'
    | 'EnergySource'
    | 'Fuse'
    | 'LinearShuntCompensator'
    | 'LoadBreakSwitch'
    | 'PowerElectronicsConnection'
    | 'PowerTransformer'
    | 'Recloser'
    | 'SynchronousMachine'
    | 'TransformerTank'
    | 'ACLineSegmentPhase'
    | 'Analog'
    | 'Asset'
    | 'BaseVoltage'
    | 'BatteryUnit'
    | 'ConcentricNeutralCableInfo'
    | 'CoordinateSystem'
    | 'CurrentLimit'
    | 'Discrete'
    | 'EnergyConsumerPhase'
    | 'Feeder'
    | 'GeographicalRegion'
    | 'House'
    | 'IEC61970CIMVersion'
    | 'LinearShuntCompensatorPhase'
    | 'LoadResponseCharacteristic'
    | 'Location'
    | 'NoLoadTest'
    | 'OperationalLimitSet'
    | 'OperationalLimitType'
    | 'OverheadWireInfo'
    | 'PerLengthPhaseImpedance'
    | 'PerLengthSequenceImpedance'
    | 'PhaseImpedanceData'
    | 'PhotovoltaicUnit'
    | 'PositionPoint'
    | 'PowerElectronicsConnectionPhase'
    | 'PowerTransformerEnd'
    | 'PowerTransformerInfo'
    | 'RatioTapChanger'
    | 'RegulatingControl'
    | 'ShortCircuitTest'
    | 'SubGeographicalRegion'
    | 'Substation'
    | 'SwitchPhase'
    | 'TapChangerControl'
    | 'TapChangerInfo'
    | 'TapeShieldCableInfo'
    | 'Terminal'
    | 'TopologicalIsland'
    | 'TopologicalNode'
    | 'TransformerCoreAdmittance'
    | 'TransformerEndInfo'
    | 'TransformerMeshImpedance'
    | 'TransformerTankEnd'
    | 'TransformerTankInfo'
    | 'VoltageLimit'
    | 'WirePosition'
    | 'WireSpacingInfo';

// Create a constant object that can be used as both type and value
export const CIMComponentTypes = {
    ACLineSegment: 'ACLineSegment',
    Breaker: 'Breaker',
    ConnectivityNode: 'ConnectivityNode',
    EnergyConsumer: 'EnergyConsumer',
    EnergySource: 'EnergySource',
    Fuse: 'Fuse',
    LinearShuntCompensator: 'LinearShuntCompensator',
    LoadBreakSwitch: 'LoadBreakSwitch',
    BatteryUnit: 'BatteryUnit',
    PhotovoltaicUnit: 'PhotovoltaicUnit',
    PowerTransformer: 'PowerTransformer',
    Recloser: 'Recloser',
    SynchronousMachine: 'SynchronousMachine',
    TransformerTank: 'TransformerTank',
    RatioTapChanger: 'RatioTapChanger'
} as const;

// Create a type from the constant object
export type CIMComponentType = typeof CIMComponentTypes[keyof typeof CIMComponentTypes];

// Endpoint mapping for each CIM class
export const CIM_ENDPOINTS: Record<CIMClass, string> = {
    ACLineSegment: '/grid/lines',
    Breaker: '/grid/breakers',
    ConnectivityNode: '/grid/connectivity-nodes',
    EnergyConsumer: '/grid/consumers',
    EnergySource: '/grid/energy-sources',
    Fuse: '/grid/fuses',
    LinearShuntCompensator: '/grid/shunt-compensators',
    LoadBreakSwitch: '/grid/switches',
    PowerElectronicsConnection: '/grid/power-electronics',
    PowerTransformer: '/grid/transformers',
    Recloser: '/grid/reclosers',
    SynchronousMachine: '/grid/synchronousmachines',
    TransformerTank: '/grid/transformer-tanks',
    ACLineSegmentPhase: '/grid/line-phases',
    Analog: '/grid/analogs',
    Asset: '/grid/assets',
    BaseVoltage: '/grid/base-voltages',
    BatteryUnit: '/grid/batteries',
    ConcentricNeutralCableInfo: '/grid/cable-info',
    CoordinateSystem: '/grid/coordinate-systems',
    CurrentLimit: '/grid/current-limits',
    Discrete: '/grid/discretes',
    EnergyConsumerPhase: '/grid/consumer-phases',
    Feeder: '/grid/feeders',
    GeographicalRegion: '/grid/regions',
    House: '/grid/houses',
    IEC61970CIMVersion: '/grid/versions',
    LinearShuntCompensatorPhase: '/grid/shunt-compensator-phases',
    LoadResponseCharacteristic: '/grid/load-response',
    Location: '/grid/locations',
    NoLoadTest: '/grid/no-load-tests',
    OperationalLimitSet: '/grid/operational-limits',
    OperationalLimitType: '/grid/operational-limit-types',
    OverheadWireInfo: '/grid/wire-info',
    PerLengthPhaseImpedance: '/grid/phase-impedances',
    PerLengthSequenceImpedance: '/grid/sequence-impedances',
    PhaseImpedanceData: '/grid/phase-impedance-data',
    PhotovoltaicUnit: '/grid/photovoltaics',
    PositionPoint: '/grid/position-points',
    PowerElectronicsConnectionPhase: '/grid/power-electronics-phases',
    PowerTransformerEnd: '/grid/transformer-ends',
    PowerTransformerInfo: '/grid/transformer-info',
    RatioTapChanger: '/grid/tap-changers',
    RegulatingControl: '/grid/regulating-controls',
    ShortCircuitTest: '/grid/short-circuit-tests',
    SubGeographicalRegion: '/grid/subregions',
    Substation: '/grid/substations',
    SwitchPhase: '/grid/switch-phases',
    TapChangerControl: '/grid/tap-changer-controls',
    TapChangerInfo: '/grid/tap-changer-info',
    TapeShieldCableInfo: '/grid/tape-shield-cables',
    Terminal: '/grid/terminals',
    TopologicalIsland: '/grid/topological-islands',
    TopologicalNode: '/grid/topological-nodes',
    TransformerCoreAdmittance: '/grid/transformer-core-admittance',
    TransformerEndInfo: '/grid/transformer-end-info',
    TransformerMeshImpedance: '/grid/transformer-mesh-impedance',
    TransformerTankEnd: '/grid/transformer-tank-ends',
    TransformerTankInfo: '/grid/transformer-tank-info',
    VoltageLimit: '/grid/voltage-limits',
    WirePosition: '/grid/wire-positions',
    WireSpacingInfo: '/grid/wire-spacing-info'
}; 